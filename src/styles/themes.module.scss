.themeViolet {
  --text: #e8e8ff;

  --themeOne: #2b2a32;
  --themeTwo: #2f2e37;
  --themeThree: #32313a;
  --themeFour: #353441;
  --themeFive: #3b3a4a;
  --themeSix: #444158;
  --themeSeven: #4c4963;
  --themeEight: #6b6980;
  --themeNine: #8884a6;
  --themeTen: #a6a1ce;

  --primary: #5e94d4;
  --primaryHover: #4184d4;

  --hpLow: #db618d;
  --hpModerate: #d8b968;
  --hpHigh: #5bbd7d;
  --hpExcellent: #56bab4;

  --pending: #a3b4c2;
  --success: #49b28c;
  --failure: #d56363;
  --warning: #e4a427;

  --monthly: #cbb97a;
  --need: #61b45a;
  --planned: #a98aff;
  --impulse: #d7873d;
  --regret: #e780be;

  --shadowOne: 0px 8px 16px 0px #27262f;
}

.themeLilac {
  --text: #6160a4;

  --themeOne: #f5f5f9;
  --themeTwo: #f1effb;
  --themeThree: #e6e3f7;
  --themeFour: #e3e0f7;
  --themeFive: #e0ddf6;
  --themeSix: #d9d6f5;
  --themeSeven: #ccc8ef;
  --themeEight: #aba4e1;
  --themeNine: #948ed4;
  --themeTen: #8381ca;

  --primary: #1e6dca;
  --primaryHover: #155aaa;

  --hpLow: #ff689e;
  --hpModerate: #f3b004;
  --hpHigh: #0ed552;
  --hpExcellent: #19dace;

  --pending: #46759d;
  --success: #23de9b;
  --failure: #f34747;
  --warning: #f4bf58;

  --monthly: #e0b61f;
  --need: #4ec025;
  --planned: #8760f7;
  --impulse: #e77b18;
  --regret: #ce3574;

  --shadowOne: 0px 8px 16px 0px #e6e4f7;
}

.systemTheme {
  @media (prefers-color-scheme: dark) {
    --text: #e8e8ff;

    --themeOne: #2b2a32;
    --themeTwo: #2f2e37;
    --themeThree: #32313a;
    --themeFour: #353441;
    --themeFive: #3b3a4a;
    --themeSix: #444158;
    --themeSeven: #4c4963;
    --themeEight: #6b6980;
    --themeNine: #8884a6;
    --themeTen: #a6a1ce;

    --primary: #5e94d4;
    --primaryHover: #4184d4;

    --hpLow: #db618d;
    --hpModerate: #d8b968;
    --hpHigh: #5bbd7d;
    --hpExcellent: #56bab4;

    --pending: #a3b4c2;
    --success: #49b28c;
    --failure: #d56363;
    --warning: #e4a427;

    --monthly: #cbb97a;
    --need: #61b45a;
    --planned: #a98aff;
    --impulse: #d7873d;
    --regret: #e780be;

    --shadowOne: 0px 8px 16px 0px #27262f;
  }

  @media (prefers-color-scheme: light) {
    --text: #6160a4;

    --themeOne: #f5f5f9;
    --themeTwo: #f1effb;
    --themeThree: #e6e3f7;
    --themeFour: #e3e0f7;
    --themeFive: #e0ddf6;
    --themeSix: #d9d6f5;
    --themeSeven: #ccc8ef;
    --themeEight: #aba4e1;
    --themeNine: #948ed4;
    --themeTen: #8381ca;

    --primary: #1e6dca;
    --primaryHover: #155aaa;

    --hpLow: #ff689e;
    --hpModerate: #f3b004;
    --hpHigh: #0ed552;
    --hpExcellent: #19dace;

    --pending: #46759d;
    --success: #23de9b;
    --failure: #f34747;
    --warning: #f4bf58;

    --monthly: #e0b61f;
    --need: #4ec025;
    --planned: #8760f7;
    --impulse: #e77b18;
    --regret: #ce3574;

    --shadowOne: 0px 8px 16px 0px #e6e4f7;
  }
}

@mixin determineBackgroundLevel($backgroundLevel) {
  @if $backgroundLevel == two {
    background-color: var(--themeTwo);
  } @else if $backgroundLevel == three {
    background-color: var(--themeThree);
  } @else if $backgroundLevel == four {
    background-color: var(--themeFour);
  } @else if $backgroundLevel == five {
    background-color: var(--themeFive);
  } @else if $backgroundLevel == six {
    background-color: var(--themeSix);
  } @else if $backgroundLevel == seven {
    background-color: var(--themeSeven);
  } @else if $backgroundLevel == eight {
    background-color: var(--themeEight);
  } @else if $backgroundLevel == nine {
    background-color: var(--themeNine);
  } @else if $backgroundLevel == ten {
    background-color: var(--themeTen);
  } @else {
    background-color: var(--themeOne);
  }
}

.backgroundLevel {
  &.one {
    @include determineBackgroundLevel(one);
  }

  &.two {
    @include determineBackgroundLevel(two);
  }

  &.three {
    @include determineBackgroundLevel(three);
  }

  &.four {
    @include determineBackgroundLevel(four);
  }

  &.five {
    @include determineBackgroundLevel(five);
  }

  &.six {
    background-color: var(--themeSix);
  }

  &.seven {
    @include determineBackgroundLevel(seven);
  }

  &.eight {
    @include determineBackgroundLevel(eight);
  }

  &.nine {
    @include determineBackgroundLevel(nine);
  }

  &.ten {
    @include determineBackgroundLevel(ten);
  }
}

@mixin determineClickLevel($backgroundLevel) {
  @if $backgroundLevel == one {
    &:active {
      background-color: var(--themeTwo) !important;
    }
  } @else if $backgroundLevel == two {
    &:active {
      background-color: var(--themeThree) !important;
    }
  } @else if $backgroundLevel == three {
    &:active {
      background-color: var(--themeFour) !important;
    }
  } @else if $backgroundLevel == four {
    &:active {
      background-color: var(--themeFive) !important;
    }
  } @else if $backgroundLevel == five {
    &:active {
      background-color: var(--themeSix) !important;
    }
  } @else if $backgroundLevel == six {
    &:active {
      background-color: var(--themeSeven) !important;
    }
  } @else if $backgroundLevel == seven {
    &:active {
      background-color: var(--themeEight) !important;
    }
  } @else {
    &:active {
      background-color: var(--themeNine) !important;
    }
  }
}

.clickLevel {
  &.one {
    @include determineClickLevel(one);
  }

  &.two {
    @include determineClickLevel(two);
  }

  &.three {
    @include determineClickLevel(three);
  }

  &.four {
    @include determineClickLevel(four);
  }

  &.five {
    @include determineClickLevel(five);
  }

  &.six {
    @include determineClickLevel(six);
  }

  &.seven {
    @include determineClickLevel(seven);
  }

  &.eight {
    @include determineClickLevel(eight);
  }
}

@mixin determineHoverLevel($backgroundLevel) {
  @if $backgroundLevel == one {
    @media (hover: hover) {
      &:hover {
        background-color: var(--themeThree);
      }
    }
  } @else if $backgroundLevel == two {
    @media (hover: hover) {
      &:hover {
        background-color: var(--themeFour);
      }
    }
  } @else if $backgroundLevel == three {
    @media (hover: hover) {
      &:hover {
        background-color: var(--themeFive);
      }
    }
  } @else if $backgroundLevel == four {
    @media (hover: hover) {
      &:hover {
        background-color: var(--themeSix);
      }
    }
  } @else if $backgroundLevel == five {
    @media (hover: hover) {
      &:hover {
        background-color: var(--themeSeven);
      }
    }
  } @else if $backgroundLevel == six {
    @media (hover: hover) {
      &:hover {
        background-color: var(--themeEight);
      }
    }
  } @else {
    @media (hover: hover) {
      &:hover {
        background-color: var(--themeNine);
      }
    }
  }
}

.hoverLevel {
  &.one {
    @include determineHoverLevel(one);
  }

  &.two {
    @include determineHoverLevel(two);
  }

  &.three {
    @include determineHoverLevel(three);
  }

  &.four {
    @include determineHoverLevel(four);
  }

  &.five {
    @include determineHoverLevel(five);
  }

  &.six {
    @include determineHoverLevel(six);
  }

  &.seven {
    @include determineHoverLevel(seven);
  }
}

.fillOne {
  fill: var(--themeOne);
}

.fillTwo {
  fill: var(--themeTwo);
}

.fillThree {
  fill: var(--themeThree);
}

.fillFour {
  fill: var(--themeFour);
}

.fillFive {
  fill: var(--themeFive);
}

.fillSix {
  fill: var(--themeSix);
}

.fillSeven {
  fill: var(--themeSeven);
}

.fillEight {
  fill: var(--themeEight);
}

.fillNine {
  fill: var(--themeNine);
}

.fillTen {
  fill: var(--themeTen);
}

.fillText {
  fill: var(--text);
}

.fillButtonText {
  fill: var(--textButton);
}

.fillPrimary {
  fill: var(--primary);
}
